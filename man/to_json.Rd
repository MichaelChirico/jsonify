% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_json.R
\name{to_json}
\alias{to_json}
\title{To JSON}
\usage{
to_json(x, unbox = FALSE, digits = NULL, numeric_dates = TRUE,
  stringsAsFactors = FALSE, by = "row")
}
\arguments{
\item{x}{object to convert to JSON}

\item{unbox}{logical indicating if single-value arrays should be 'unboxed', 
that is, not contained inside an array.}

\item{digits}{integer specifying the number of decimal places to round numerics. 
numeric values are coorced using \code{as.integer}, which may round-down the value you supply.
Default is \code{NULL} - no rounding}

\item{numeric_dates}{logical indicating if dates should be treated as numerics. 
Defaults to TRUE for speed. If FALSE, the dates will be coerced to character in UTC time zone}

\item{stringsAsFactors}{}

\item{by}{}
}
\description{
Converts R objects to JSON
}
\examples{

to_json(1:3)
to_json(letters[1:3])
to_json(data.frame(x = 1:3, y = letters[1:3]))
to_json(list(x = 1:3, y = list(z = letters[1:3])))
to_json(seq(as.Date("2018-01-01"), as.Date("2018-01-05"), length.out = 5))
to_json(seq(as.Date("2018-01-01"), as.Date("2018-01-05"), length.out = 5), numeric_dates = FALSE)

psx <- seq(
  as.POSIXct("2018-01-01", tz = "Australia/Melbourne"), 
  as.POSIXct("2018-02-01", tz = "Australia/Melbourne"), 
  length.out = 5
  )
to_json(psx)
to_json(psx, numeric_dates = FALSE)

## unbox single-value arrays
to_json(list(x = 1), unbox = TRUE)
to_json(list(x = 1, y = c("a"), z = list(x = 2, y = c("b"))), unbox = TRUE)

## rounding numbers using the digits argument
to_json(1.23456789, digits = 2)
to_json(data.frame(x = 1L:3L, y = rnorm(3), z = letters[1:3], 
  stringsAsFactors = FALSE), digits = 0 )


}
